learningDataFile = Houses11.isf

pairs = {1,2} S, {1,3} S, {1,4} S, {1,6} S, {1,7} S, {2,3} S, {2,4} S, {2,6} S, {3,4} S, {5,4} S, {7,5} S, {7,6} S, {2,1} Sc, {3,1} Sc, {4,1} Sc, {6,1} Sc, {7,1} Sc, {3,2} Sc, {4,2} Sc, {6,2} Sc, {4,3} Sc, {4,5} Sc, {5,7} Sc, {6,7} Sc

dominance = pareto	#pareto|lorenz; use Pareto or Lorenz dominance relation? (for Lorenz dominance data must meet special requirements)
dominanceForPairsOfOrdinalValues = classic	#classic|strict; use classic or strict definition of dominance for ordinal criteria present in PCT?
negativeExamplesTreatmentForVCDRSA = only-inconsistent	#only-inconsistent|only-inconsistent-and-boundary|any; strategy of covering negative examples by rules in case of VC-DRSA
ruleConditionsSelectionMethodInVCDomLEM = mix	#mix|base; strategy of rule conditions selection in VC-DomLEM algorithm; mix conditions from different pairs of objects or take all rule conditions from the same base pair of objects?
allowEmptyRulesInVCDomLEM = true	#true|false; allow VC-DomLEM algorithm to induce rules with empty condition part if their consistency is good enough?
useEdgeRegionsInVCDomLEM = false	#true|false; use pairs of objects from EDGE region only or all (sufficiently consistent) pairs of objects from considered lower/upper approximation when creating rule's conditions in VC-DomLEM algorithm?
optimizeRuleConsistencyInVCDomLEMWrt = approximation	#approximation|set; set of pairs of objects with respect to which value of rule consistency measure optimized in VC-DomLEM algorithm is calculated; can be lower (or upper) approximation of the preference relation for which a certain (or possible, respectively) rule is generated or entire preference relation (for certain rules only)
writeDominationInformation = true	#true|false; insert sections [P-dominating sets] and [P-dominated sets] into *.apx file?
writeRulesStatistics = true	#true|false; insert rules' statistics into *.rules file?
writeLearningPositiveExamples = true	#true|false; list learning positive examples of each rule (write LearningPositiveExamples tag) inside [RULESINFO] section of *.rules file? (works only when writeRulesStatistics is true)
precision = -1	#integer value; denotes precision of floating-point numbers; set -1 in order to print floating-point numbers as they are, without rounding